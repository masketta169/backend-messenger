// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum SubjectType {
  MATH
  PHYSICS
  CHEMISTRY
  BIOLOGY
  HISTORY
  COMPUTER_SCIENCE
  LITERATURE
}

enum Role {
  STUDENT
  TUTOR
  ADMIN
}

model User {
  id          String       @id @default(uuid())
  name        String
  surname     String
  second_name String?
  role        Role
  subjects    SubjectType[]
  email       String       @unique
  password    String
  createdAt   DateTime     @default(now())

  chats       ChatUser[]
  messages    Message[]

  refreshToken String?
}

model Chat {
  id        String   @id @default(uuid())
  name      String?
  createdAt DateTime @default(now())

  messages  Message[]
  users     ChatUser[]
}

model ChatUser {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  chat   Chat   @relation(fields: [chatId], references: [id], onDelete: Cascade)
  chatId String

  @@unique([userId, chatId])
}

model Message {
  id        String   @id @default(uuid())
  content   String
  createdAt DateTime @default(now())

  chat   Chat   @relation(fields: [chatId], references: [id], onDelete: Cascade)
  chatId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
}
